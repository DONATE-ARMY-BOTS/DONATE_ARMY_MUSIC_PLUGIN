from pyrogram import enums, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from DONATE_ARMY_MUSIC import app
from DONATE_ARMY_MUSIC.misc import SUDOERS
from DONATE_ARMY_MUSIC.utils.database import delete_served_chat
from DONATE_ARMY_MUSIC.utils.vip_ban import admin_filter

# ------------------------------------------------------------------------------- #


@app.on_message(filters.command("pin") & admin_filter & SUDOERS)
async def pin(_, message):
    replied = message.reply_to_message
    chat_title = message.chat.title
    chat_id = message.chat.id
    user_id = message.from_user.id
    name = message.from_user.mention

    if message.chat.type == enums.ChatType.PRIVATE:
        await message.reply_text("**·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ãs ·¥è…¥ ü è ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs !**")
    elif not replied:
        await message.reply_text("** Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è ·¥ò…™…¥ …™·¥õ !**")
    else:
        user_stats = await app.get_chat_member(chat_id, user_id)
        if user_stats.privileges.can_pin_messages and message.reply_to_message:
            try:
                await message.reply_to_message.pin()
                await message.reply_text(
                    f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥ò…™…¥…¥·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á!**\n\n**·¥Ñ ú·¥Ä·¥õ:** {chat_title}\n**·¥Ä·¥Ö·¥ç…™…¥:** {name}",
                    reply_markup=InlineKeyboardMarkup(
                        [[InlineKeyboardButton(" üìù ·¥†…™·¥á·¥°s ·¥ç·¥áss·¥Ä…¢·¥á ", url=replied.link)]]
                    ),
                )
            except Exception as e:
                await message.reply_text(str(e))


@app.on_message(filters.command("pinned"))
async def pinned(_, message):
    chat = await app.get_chat(message.chat.id)
    if not chat.pinned_message:
        return await message.reply_text("**…¥·¥è ·¥ò…™…¥…¥·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á “ì·¥è·¥ú…¥·¥Ö**")
    try:
        await message.reply_text(
            " ú·¥á Ä·¥á …™s ·¥õ ú·¥á  ü·¥Ä·¥õ·¥ás·¥õ ·¥ò…™…¥…¥·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á",
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(
                            text="üìù ·¥†…™·¥á·¥° ·¥ç·¥áss·¥Ä…¢·¥á", url=chat.pinned_message.link
                        )
                    ]
                ]
            ),
        )
    except Exception as er:
        await message.reply_text(er)


# ------------------------------------------------------------------------------- #


@app.on_message(filters.command("unpin") & admin_filter & SUDOERS)
async def unpin(_, message):
    replied = message.reply_to_message
    chat_title = message.chat.title
    chat_id = message.chat.id
    user_id = message.from_user.id
    name = message.from_user.mention

    if message.chat.type == enums.ChatType.PRIVATE:
        await message.reply_text("**·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ãs ·¥è…¥ ü è ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs !**")
    elif not replied:
        await message.reply_text("** Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è ·¥ú…¥·¥ò…™…¥ …™·¥õ !**")
    else:
        user_stats = await app.get_chat_member(chat_id, user_id)
        if user_stats.privileges.can_pin_messages and message.reply_to_message:
            try:
                await message.reply_to_message.unpin()
                await message.reply_text(
                    f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥ú…¥·¥ò…™…¥…¥·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á!**\n\n**·¥Ñ ú·¥Ä·¥õ:** {chat_title}\n**·¥Ä·¥Ö·¥ç…™…¥:** {name}",
                    reply_markup=InlineKeyboardMarkup(
                        [[InlineKeyboardButton(" üìù ·¥†…™·¥á·¥°s ·¥ç·¥áss·¥Ä…¢·¥á ", url=replied.link)]]
                    ),
                )
            except Exception as e:
                await message.reply_text(str(e))


# --------------------------------------------------------------------------------- #


@app.on_message(filters.command("removephoto") & admin_filter & SUDOERS)
async def deletechatphoto(_, message):

    chat_id = message.chat.id
    user_id = message.from_user.id
    msg = await message.reply_text("**·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢....**")
    admin_check = await app.get_chat_member(chat_id, user_id)
    if message.chat.type == enums.ChatType.PRIVATE:
        await msg.edit("**·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ã ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs !**")
    try:
        if admin_check.privileges.can_change_info:
            await app.delete_chat_photo(chat_id)
            await msg.edit(
                "**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö ·¥ò Ä·¥è“ì…™ ü·¥á ·¥ò ú·¥è·¥õ·¥è “ì Ä·¥è·¥ç …¢ Ä·¥è·¥ú·¥ò !\n ô è** {}".format(
                    message.from_user.mention
                )
            )
    except:
        await msg.edit(
            "**·¥õ ú·¥á ·¥ús·¥á Ä ·¥ç·¥ès·¥õ …¥·¥á·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¢·¥á …™…¥“ì·¥è ·¥Ä·¥Ö·¥ç…™…¥  Ä…™…¢ ú·¥õs ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á …¢ Ä·¥è·¥ú·¥ò ·¥ò ú·¥è·¥õ·¥è !**"
        )


# --------------------------------------------------------------------------------- #


@app.on_message(filters.command("setphoto") & admin_filter & SUDOERS)
async def setchatphoto(_, message):
    reply = message.reply_to_message
    chat_id = message.chat.id
    user_id = message.from_user.id
    msg = await message.reply_text("·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢...")
    admin_check = await app.get_chat_member(chat_id, user_id)
    if message.chat.type == enums.ChatType.PRIVATE:
        await msg.edit("`·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ã ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs !`")
    elif not reply:
        await msg.edit("** Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥è Ä ·¥Ö·¥è·¥Ñ·¥ú·¥ç·¥á…¥·¥õ.**")
    elif reply:
        try:
            if admin_check.privileges.can_change_info:
                photo = await reply.download()
                await message.chat.set_photo(photo=photo)
                await msg.edit_text(
                    "**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …¥·¥á·¥° ·¥ò Ä·¥è“ì…™ ü·¥á ·¥ò ú·¥è·¥õ·¥è …™…¥s·¥á Ä·¥õ !\n ô è** {}".format(
                        message.from_user.mention
                    )
                )
            else:
                await msg.edit("**s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥° Ä·¥è…¥…¢  ú·¥Ä·¥ò·¥ò·¥á…¥·¥á·¥Ö ·¥õ Ä è ·¥Ä…¥·¥è·¥õ ú·¥á Ä ·¥ò ú·¥è·¥õ·¥è !**")

        except:
            await msg.edit(
                "**·¥õ ú·¥á ·¥ús·¥á Ä ·¥ç·¥ès·¥õ …¥·¥á·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¢·¥á …™…¥“ì·¥è ·¥Ä·¥Ö·¥ç…™…¥  Ä…™…¢ ú·¥õs ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á …¢ Ä·¥è·¥ú·¥ò ·¥ò ú·¥è·¥õ·¥è !**"
            )


# --------------------------------------------------------------------------------- #


@app.on_message(filters.command("settitle") & admin_filter & SUDOERS)
async def setgrouptitle(_, message):
    reply = message.reply_to_message
    chat_id = message.chat.id
    user_id = message.from_user.id
    msg = await message.reply_text("·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢...")
    if message.chat.type == enums.ChatType.PRIVATE:
        await msg.edit("**·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ã ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs !**")
    elif reply:
        try:
            title = message.reply_to_message.text
            admin_check = await app.get_chat_member(chat_id, user_id)
            if admin_check.privileges.can_change_info:
                await message.chat.set_title(title)
                await msg.edit(
                    "**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …¥·¥á·¥° …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á …™…¥s·¥á Ä·¥õ !\n ô è** {}".format(
                        message.from_user.mention
                    )
                )
        except AttributeError:
            await msg.edit(
                "**·¥õ ú·¥á ·¥ús·¥á Ä ·¥ç·¥ès·¥õ …¥·¥á·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¢·¥á …™…¥“ì·¥è ·¥Ä·¥Ö·¥ç…™…¥  Ä…™…¢ ú·¥õs ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á …¢ Ä·¥è·¥ú·¥ò ·¥õ…™·¥õ ü·¥á !**"
            )
    elif len(message.command) > 1:
        try:
            title = message.text.split(None, 1)[1]
            admin_check = await app.get_chat_member(chat_id, user_id)
            if admin_check.privileges.can_change_info:
                await message.chat.set_title(title)
                await msg.edit(
                    "**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …¥·¥á·¥° …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á …™…¥s·¥á Ä·¥õ !\n ô è** {}".format(
                        message.from_user.mention
                    )
                )
        except AttributeError:
            await msg.edit(
                "**·¥õ ú·¥á ·¥ús·¥á Ä ·¥ç·¥ès·¥õ …¥·¥á·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¢·¥á …™…¥“ì·¥è ·¥Ä·¥Ö·¥ç…™…¥  Ä…™…¢ ú·¥õs ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á …¢ Ä·¥è·¥ú·¥ò ·¥õ…™·¥õ ü·¥á !**"
            )

    else:
        await msg.edit(
            "** è·¥è·¥ú …¥·¥á·¥á·¥Ö  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥õ·¥áx·¥õ ·¥è Ä …¢…™·¥†·¥á s·¥è·¥ç·¥á ·¥õ·¥áx·¥õ ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á …¢ Ä·¥è·¥ú·¥ò ·¥õ…™·¥õ ü·¥á **"
        )


# --------------------------------------------------------------------------------- #


@app.on_message(filters.command("setdiscription") & admin_filter & SUDOERS)
async def setg_discription(_, message):
    reply = message.reply_to_message
    chat_id = message.chat.id
    user_id = message.from_user.id
    msg = await message.reply_text("**·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢...**")
    if message.chat.type == enums.ChatType.PRIVATE:
        await msg.edit("**·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ãs ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs!**")
    elif reply:
        try:
            discription = message.reply_to_message.text
            admin_check = await app.get_chat_member(chat_id, user_id)
            if admin_check.privileges.can_change_info:
                await message.chat.set_description(discription)
                await msg.edit(
                    "**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …¥·¥á·¥° …¢ Ä·¥è·¥ú·¥ò ·¥Ö…™s·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥ …™…¥s·¥á Ä·¥õ!**\n ô è {}".format(
                        message.from_user.mention
                    )
                )
        except AttributeError:
            await msg.edit(
                "**·¥õ ú·¥á ·¥ús·¥á Ä ·¥ç·¥ús·¥õ  ú·¥Ä·¥†·¥á ·¥Ñ ú·¥Ä…¥…¢·¥á …™…¥“ì·¥è ·¥Ä·¥Ö·¥ç…™…¥  Ä…™…¢ ú·¥õs ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á …¢ Ä·¥è·¥ú·¥ò ·¥Ö…™s·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥!**"
            )
    elif len(message.command) > 1:
        try:
            discription = message.text.split(None, 1)[1]
            admin_check = await app.get_chat_member(chat_id, user_id)
            if admin_check.privileges.can_change_info:
                await message.chat.set_description(discription)
                await msg.edit(
                    "**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …¥·¥á·¥° …¢ Ä·¥è·¥ú·¥ò ·¥Ö…™s·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥ …™…¥s·¥á Ä·¥õ!**\n ô è {}".format(
                        message.from_user.mention
                    )
                )
        except AttributeError:
            await msg.edit(
                "**·¥õ ú·¥á ·¥ús·¥á Ä ·¥ç·¥ús·¥õ  ú·¥Ä·¥†·¥á ·¥Ñ ú·¥Ä…¥…¢·¥á …™…¥“ì·¥è ·¥Ä·¥Ö·¥ç…™…¥  Ä…™…¢ ú·¥õs ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á …¢ Ä·¥è·¥ú·¥ò ·¥Ö…™s·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥!**"
            )
    else:
        await msg.edit(
            "** è·¥è·¥ú …¥·¥á·¥á·¥Ö ·¥õ·¥è  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥õ·¥áx·¥õ ·¥è Ä …¢…™·¥†·¥á s·¥è·¥ç·¥á ·¥õ·¥áx·¥õ ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á …¢ Ä·¥è·¥ú·¥ò ·¥Ö…™s·¥Ñ Ä…™·¥ò·¥õ·¥è…¥!**"
        )


# --------------------------------------------------------------------------------- #


@app.on_message(filters.command("leavegroup") & SUDOERS)
async def bot_leave(_, message):
    chat_id = message.chat.id
    text = "**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è  ú…™ Ä·¥è !!.**"
    await message.reply_text(text)
    await app.leave_chat(chat_id=chat_id, delete=True)
    await delete_served_chat(chat_id)


# --------------------------------------------------------------------------------- #

__MODULE__ = "G Ä·¥è·¥ú·¥ò"
__HELP__ = """
**G Ä·¥è·¥ú·¥ò M·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ**

T ú…™s ·¥ç·¥è·¥Ö·¥ú·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥ás ·¥†·¥Ä Ä…™·¥è·¥ús ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös “ì·¥è Ä ·¥ç·¥Ä…¥·¥Ä…¢…™…¥…¢ …¢ Ä·¥è·¥ú·¥òs.

C·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:
- /·¥ò…™…¥: P…™…¥ ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á …™…¥ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
- /·¥ò…™…¥…¥·¥á·¥Ö: V…™·¥á·¥° ·¥õ ú·¥á ·¥Ä·¥õ·¥ás·¥õ ·¥ò…™…¥…¥·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á …™…¥ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
- /·¥ú…¥·¥ò…™…¥: U…¥·¥ò…™…¥ ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á …™…¥ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
- / Ä·¥á·¥ç·¥è·¥†·¥á·¥ò ú·¥è·¥õ·¥è: R·¥á·¥ç·¥è·¥†·¥á ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò's ·¥ò Ä·¥è“ì…™·¥á ·¥ò ú·¥è·¥õ·¥è.
- /s·¥á·¥õ·¥ò ú·¥è·¥õ·¥è: S·¥á·¥õ ·¥Ä …¥·¥á·¥° ·¥ò Ä·¥è“ì…™·¥á ·¥ò ú·¥è·¥õ·¥è “ì·¥è Ä ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
- /s·¥á·¥õ·¥õ…™·¥õ·¥á: S·¥á·¥õ ·¥Ä …¥·¥á·¥° ·¥õ…™·¥õ·¥á “ì·¥è Ä ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
- /s·¥á·¥õ·¥Ö…™s·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥: S·¥á·¥õ ·¥Ä …¥·¥á·¥° ·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥ “ì·¥è Ä ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.
- /·¥á·¥Ä·¥†·¥á…¢ Ä·¥è·¥ú·¥ò: M·¥Ä·¥ã·¥á ·¥õ ú·¥á  ô·¥è·¥õ ·¥á·¥Ä·¥†·¥á ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.

N·¥è·¥õ·¥á:
- O…¥ è s·¥ú·¥Ö·¥è ·¥ús·¥á Äs ·¥Ä…¥·¥Ö ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú·¥ás·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös.
"""
